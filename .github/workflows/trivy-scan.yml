name: Run Trivy Scan Manually

on:
  workflow_dispatch:
    inputs:
      image_to_scan:
        description: 'Docker image to scan'
        required: true
        default: 'nginx:latest'

jobs:
  test-trivy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          LATEST_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | jq -r '.tag_name')
          wget https://github.com/aquasecurity/trivy/releases/download/${LATEST_VERSION}/trivy_${LATEST_VERSION#v}_Linux-64bit.deb
          sudo dpkg -i trivy_${LATEST_VERSION#v}_Linux-64bit.deb

      - name: Run Trivy Scan
        run: |
          trivy image \
            --db-repository public.ecr.aws/aquasecurity/trivy-db \
            --java-db-repository public.ecr.aws/aquasecurity/trivy-java-db \
            --format json \
            --ignore-unfixed \
            --vuln-type os,library \
            --scanners vuln \
            --severity CRITICAL,HIGH \
            --output trivy_results.json \
            ${{ github.event.inputs.image_to_scan }}

      - name: Process Trivy Results
        run: |
          if jq -e '.Results[1].Vulnerabilities | length > 0' trivy_results.json > /dev/null; then
            echo "Vulnerabilities detected:"
            jq -r '.Results[1].Vulnerabilities[] | 
              "Package: \(.PkgName)\nSeverity: \(.Severity)\nID: \(.VulnerabilityID)\nInstalled Version: \(.InstalledVersion)\nFixed Version: \(.FixedVersion)\nDescription: \(.Description)\nReference: \(.PrimaryURL)\n---"' trivy_results.json
            exit 1
          else
            echo "No vulnerabilities detected."
          fi
